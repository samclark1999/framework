<?php if ( ! defined( 'ABSPATH' ) ) {
	exit;
}

/**
 * lvl_load_scripts function.
 *
 * Enqueuing all js files needed for theme to function
 * Hooks into the WordPress wp_enqueue_scripts action
 *
 * @access public
 * @return void
 */
add_action( 'wp_enqueue_scripts', 'lvl_load_scripts', 10 );
function lvl_load_scripts(): void {
	// Dequeue the built-in version of jQuery from WordPress
//    wp_dequeue_script('jquery');
//    wp_dequeue_script('jquery-core');
//    // Unregister the built-in version of jQuery from WordPress
	wp_deregister_script( 'jquery' );
	wp_deregister_script( 'jquery-core' );
	// jQuery from CDN
	wp_register_script( 'jquery', '//cdnjs.cloudflare.com/ajax/libs/jquery/3.6.1/jquery.min.js', [], null, false );
	wp_register_script( 'jquery-core', '', [ 'jquery' ], null, false );


	// Main app JS
	wp_enqueue_script( 'lvl-bootstrap', LVL_THEME_URI . lvl_cache_bust( '/dist/js/bootstrap.min.js' ), [], null, false );
	wp_enqueue_script( 'lvl-main-scripts', LVL_THEME_URI . lvl_cache_bust( '/dist/js/app.min.js' ), [ 'lvl-bootstrap' ], null, false );
	wp_enqueue_script( 'lvl-forms', LVL_THEME_URI . lvl_cache_bust( '/dist/js/forms.min.js' ), [ 'lvl-main-scripts', 'jquery' ], null, true );

	/*
	 * Localizing the app.min.js script.
	 * Enable access to these values inside the app.js file like so:
	 * console.log( app_localized.themepath );
	 */
	wp_localize_script(
		'lvl-main-scripts',
		'app_localized',
		[
			'themePath' => LVL_THEME_URI,
			'ajax_url'  => admin_url( 'admin-ajax.php' ),
			'check'     => wp_create_nonce( 'lvl-ajax-nonce' ),
			'namespace' => 'lvl',
		]
	);

	/*
	 * NOTE the main scripts file is a dependency for all plugin scripts, so they will be loaded after the main scripts file.
	 */
	wp_register_script( 'lvl-swiffy', LVL_THEME_URI . lvl_cache_bust( '/dist/js/swiffy.min.js' ), [ 'lvl-main-scripts' ], null, true );
	wp_register_script( 'lvl-swiper', LVL_THEME_URI . lvl_cache_bust( '/dist/js/swiper.min.js' ), [ 'lvl-main-scripts' ], null, true );
	wp_register_script( 'lvl-countup', LVL_THEME_URI . lvl_cache_bust( '/dist/js/countup.min.js' ), [ 'lvl-main-scripts' ], null, true );
	wp_register_script( 'lvl-leaflet-js', 'https://unpkg.com/leaflet@1.7.1/dist/leaflet.js', [ 'lvl-main-scripts' ], null, true );
	wp_register_script( 'lvl-aos', LVL_THEME_URI . lvl_cache_bust( '/dist/js/aos.min.js' ), [ 'lvl-main-scripts' ], null, true );

}

/**
 * lvl_load_styles function.
 *
 * Enqueuing all css files needed for theme to function.
 * All css files are generated by running the cli command: grunt build in the theme directory.
 * Hooks into the WordPress wp_enqueue_scripts action
 *
 * @access public
 * @return void
 */
add_action( 'wp_enqueue_scripts', 'lvl_load_styles', 99 );
function lvl_load_styles(): void {
	// WP Base CSS
	wp_enqueue_style( 'lvl-wp', LVL_THEME_URI . lvl_cache_bust( '/dist/css/' . 'wp.min.css' ), [ 'lvl-base-styles' ], null, 'all' );
	// Bootstrap CSS
	wp_enqueue_style( 'lvl-bootstrap', LVL_THEME_URI . lvl_cache_bust( '/dist/css/' . 'bootstrap.min.css' ), [ 'lvl-base-styles' ], null, 'all' );
	// Frontend CSS // TODO remove??
	wp_enqueue_style( 'lvl-frontend', LVL_THEME_URI . lvl_cache_bust( '/dist/css/' . 'frontend.min.css' ), [ 'lvl-base-styles' ], null, 'all' );
	// Main app CSS
	wp_enqueue_style( 'lvl-base-styles', LVL_THEME_URI . lvl_cache_bust( '/dist/css/' . 'app.min.css' ), [], null, 'all' );
	// TODO: theme options fonts picker
	// Fonts
	// NOTE: If using CDN fonts, uncomment preconnect lines in lvl_add_head_scripts function below.
//    wp_enqueue_style('lvl-google-fonts', 'https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,400;0,700;1,400;1,700&family=Work+Sans:ital,wght@0,400;0,700;1,400&display=swap', [], null, 'all');
	// FONT AWESOME
	if ( get_field( 'enable_font_awesome', 'options' ) ) {
		wp_enqueue_style( 'lvl-fontawesome', 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css', [], null, 'all' );
		$font_awesome_choices = get_field( 'font_awesome_choices', 'options' );
		if ( $font_awesome_choices ) {
			foreach ( $font_awesome_choices as $choice ) {
				wp_enqueue_style( 'lvl-fontawesome-' . $choice, 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/' . $choice . '.min.css', [ 'lvl-fontawesome' ], null, 'all' );
			}
		}

//        wp_enqueue_style('lvl-fontawesome-duotone', 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/v5-duotone.min.css', ['lvl-fontawesome'], null, 'all');
	}

	// Swiper CSS
	wp_register_style( 'lvl-swiper', LVL_THEME_URI . lvl_cache_bust( '/dist/css/' . 'swiper.min.css' ), [], null, 'all' );

	// Leaflet CSS
	wp_register_style( 'lvl-leaflet-css', 'https://unpkg.com/leaflet@1.7.1/dist/leaflet.css', [], null, 'all' );

	// TODO: Why??
//	wp_dequeue_style( 'wp-block-library' );
//	wp_dequeue_style( 'wp-block-library-theme' );

}

/**
 * Adds custom login styles to the default WordPress login screen.
 * @return void
 */
add_action( 'login_enqueue_scripts', 'lvl_enqueue_login_styles', 10 );
function lvl_enqueue_login_styles() {
	wp_enqueue_style( 'lvl-login-stylesheet', LVL_THEME_URI . lvl_cache_bust( '/dist/admin/css/login.min.css' ), false );
}

/**
 * Adds stuff to the head like the GTM dataLayer global variable populated with various properties for use in tags & triggers inside GTM.
 *
 * @access public
 * @return void
 */
add_action( 'wp_head', 'lvl_add_head_scripts' );
function lvl_add_head_scripts() {
	$head_items = [
		'<link rel="preconnect" href="https://fonts.googleapis.com">',
		'<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />',
	];

	foreach ( $head_items as $item ) {
		echo $item;
	}
}